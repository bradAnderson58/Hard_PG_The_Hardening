
// glsl Vertex shader definition
vertex_program ToonTexture_VS glsl
{
	// Look in this source file for shader code
	source toonTex_vs.glsl
	
	// use this function for the vertex shader
	//entry_point main_toon_texture_vp
	
	// Compile to openGL format instead
	//profiles arbvp1 

	// This block saves us from manually setting parameters in code
	default_params
	{
		// ogre will put the worldviewproj into our 'worldViewProj' parameter for us.
		param_named_auto worldViewProj worldviewproj_matrix
		//throws an error if you declare this and don't use it
	}
}

// glsl Pixel shader definition
fragment_program ToonTexture_PS glsl
{
	// Look in this source file for shader code
	source toonTex_ps.glsl 	// change this to a GLSL file
	
	// Use this function for the pixel shader
	//entry_point main_toon_texture_fp
	
	// Compile to openGL format instead
	//profiles arbfp1 
}

material ToonNinja
{
	// Material has one technique
	technique
	{
		// This technique has one pass
		pass
		{
			// Make this pass use the vertex shader defined above
			vertex_program_ref ToonTexture_VS
			{

			}
			// Make this pass use the pixel shader defined above
			fragment_program_ref ToonTexture_PS
			{

			}
			texture_unit
			{
				// This pass will use this texture as input
				texture nskingr.jpg
			}
		}
	}
}

material ToonDiablous
{
	// Material has one technique
	technique
	{
		// This technique has one pass
		pass
		{
			// Make this pass use the vertex shader defined above
			vertex_program_ref ToonTexture_VS
			{

			}
			// Make this pass use the pixel shader defined above
			fragment_program_ref ToonTexture_PS
			{

			}
			texture_unit
			{
				// This pass will use this texture as input
				texture diablous_texture.png
			}
		}
	}
}

material ToonPriestess
{
	// Material has one technique
	technique
	{
		// This technique has one pass
		pass
		{
			// Make this pass use the vertex shader defined above
			vertex_program_ref ToonTexture_VS
			{

			}
			// Make this pass use the pixel shader defined above
			fragment_program_ref ToonTexture_PS
			{

			}
			texture_unit
			{
				// This pass will use this texture as input
				texture priest_texture.png
			}
		}
	}
}

material ToonFireBall
{
	technique
	{
		pass
		{
			vertex_program_ref ToonTexture_VS
			{

			}
			fragment_program_ref ToonTexture_PS
			{

			}
			texture_unit
			{
				texture fire.jpg
			}
		}
	}
}

vertex_program wall_vs glsl
{
	// Look in this source file for shader code
	source wall_vs.glsl



}

fragment_program wall_ps glsl
{
	// Look in this source file for shader code
	source wall_ps.glsl

	// This block saves us from manually setting parameters in code
	default_params
	{
		//use for uniforms
		param_named color_tex int 0
		param_named normal_tex int 1
		//throws an error if you declare this and don't use it
	}
	
}
material ToonRockWall
{
	technique
	{
		pass
		{
// Make this pass use the vertex shader defined above
			vertex_program_ref wall_vs{}
			// Make this pass use the pixel shader defined above
			fragment_program_ref wall_ps{}
			texture_unit
			{
				// This pass will use this texture as input
				texture rockwall.tga
			}
			texture_unit
			{
				texture rockwall_NH.tga
			}
		}
	}
}

material ToonFish
{
	technique
	{
		pass
		{
			vertex_program_ref ToonTexture_VS
			{

			}
			fragment_program_ref ToonTexture_PS
			{

			}
			texture_unit
			{
				texture steelhead.png
			}
		}
	}
}