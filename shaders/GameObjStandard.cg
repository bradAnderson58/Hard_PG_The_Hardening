// This time the name of the file is important, as the material file refers 
// specifically to it.

// do stuff with vertex inputs
void main_plain_texture_vp(
	// Vertex Inputs
	float4 position			: POSITION, 	// Vertex position in model space
	float2 texCoord0 		: TEXCOORD0, 	// Texture UV set 0
	// Outputs
	out float4 oPosition 	: POSITION,		// Transformed vertex position
	out float2 uv0			: TEXCOORD0, 	// UV0
	// Model Level Inputs
	uniform float4x4 worldViewProj
	)
{
	// Calculate output position
	oPosition = mul(worldViewProj, position);
	// Simply copy the input vertex UV to the output
	uv0 = texCoord0;
}

void main_plain_texture_fp(
	// Pixel Inputs
	float2 uv0 			: TEXCOORD0, 	// UV interpolated for current pixel
	// Outputs
	out float4 color 	: COLOR, 		// Output color we want to write
	// Model Level Inputs
	uniform sampler2d texture 			// Texture we're going to use
	)
{
	// Just sample texture using supplied UV
	color = text2D(texture, uv0);
}

// keyword uniform identifies the parameters you will have to supply in the 
// material file.

// next, in game: pOgreEntity->setMaterialName( "PlainTexture" );